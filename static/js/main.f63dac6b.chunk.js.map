{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/InputText.jsx","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","InputText","state","this","props","name","value","change","required","validate","onBlur","blured","valid","requir","length","invalid","type","placeholder","charAt","toUpperCase","slice","onChange","event","autoComplete","Component","NewMovie","imgUrlValidate","imdbUrlValidate","titleBlur","imgUrlBlur","imdbUrlBlur","imdbIdBlur","handleChange","target","setState","onSubmit","preventDefault","addMovie","test","buttonActive","disabled","style","backgroundColor","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f63dac6b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class InputText extends Component {\n  state = {\n  }\n\n  render() {\n    const { name, value, change, required, validate, onBlur, blured, valid }\n      = this.props;\n\n    const requir = (required && !value.length && blured);\n    const invalid = (validate && !valid && blured);\n\n    return (\n      <div>\n        <input\n          type=\"text\"\n          name={name}\n          placeholder={\n            name.charAt(0).toUpperCase() + name.slice(1) + (required ? '*' : '')\n          }\n          className={\n            `form-control mb-4 input\n            ${requir || invalid ? 'warning-input' : ''}`\n          }\n          value={value}\n          onChange={event => change(event)}\n          onBlur={event => onBlur(event)}\n          autoComplete=\"off\"\n        />\n        {requir\n          && (\n            <span className=\"error-message\">\n              {`${name} is required`}\n              <br />\n            </span>\n          )}\n        {invalid\n          && (\n            <span className=\"error-message\">\n              {`${name} is invalid`}\n            </span>\n          )}\n      </div>\n    );\n  }\n}\n\nInputText.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n  required: PropTypes.bool.isRequired,\n  validate: PropTypes.bool.isRequired,\n  valid: PropTypes.bool.isRequired,\n  onBlur: PropTypes.func.isRequired,\n  blured: PropTypes.bool.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { InputText } from '../Input';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    imgUrlValidate: false,\n    imdbUrlValidate: false,\n    titleBlur: false,\n    imgUrlBlur: false,\n    imdbUrlBlur: false,\n    imdbIdBlur: false,\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const { title, description, imgUrl, imdbUrl, imdbId }\n      = this.state;\n    const { addMovie } = this.props;\n\n    addMovie({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      imgUrlValidate: false,\n      imdbUrlValidate: false,\n      titleBlur: false,\n      imgUrlBlur: false,\n      imdbUrlBlur: false,\n      imdbIdBlur: false,\n    });\n  }\n\n  onBlur = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [`${name}Blur`]: true });\n\n    if (name === 'imgUrl' || name === 'imdbUrl') {\n      // eslint-disable-next-line\n      const regexp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n      if (regexp.test(value)) {\n        this.setState({ [`${name}Validate`]: true });\n      } else {\n        this.setState({ [`${name}Validate`]: false });\n      }\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      imgUrlValidate,\n      imdbUrlValidate,\n      titleBlur,\n      imgUrlBlur,\n      imdbUrlBlur,\n      imdbIdBlur,\n    } = this.state;\n\n    const buttonActive\n      = !!title && !!imdbId && imgUrlValidate && imdbUrlValidate;\n\n    return (\n      <form onSubmit={event => this.onSubmit(event)}>\n        <InputText\n          name=\"title\"\n          value={title}\n          change={this.handleChange}\n          required\n          onBlur={this.onBlur}\n          blured={titleBlur}\n        />\n        <InputText\n          name=\"description\"\n          value={description}\n          change={this.handleChange}\n          onBlur={this.onBlur}\n        />\n        <InputText\n          name=\"imgUrl\"\n          value={imgUrl}\n          change={this.handleChange}\n          required\n          validate\n          valid={imgUrlValidate}\n          onBlur={this.onBlur}\n          blured={imgUrlBlur}\n        />\n        <InputText\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          change={this.handleChange}\n          required\n          validate\n          valid={imdbUrlValidate}\n          onBlur={this.onBlur}\n          blured={imdbUrlBlur}\n        />\n        <InputText\n          name=\"imdbId\"\n          value={imdbId}\n          change={this.handleChange}\n          required\n          onBlur={this.onBlur}\n          blured={imdbIdBlur}\n        />\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary btn-lg\"\n          disabled={buttonActive === false ? 'disabled' : false}\n          style={buttonActive === false ? { backgroundColor: 'grey' } : {}}\n        >\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({ movies: [\n      ...state.movies,\n      movie,\n    ] }\n    ));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}